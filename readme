# Overview
Employee Management Web Application
![image](/images/empwebapp.png)

## Procedure

### RDS
-	Go to RDS console -> Create a database
-	Use MySQL -> Version 8.0.28 -> Free tier template
-	DB instance identifier - employee
-	Credentials Settings - <RDP_admin_name> - <RDP_admin_password>
-	Default VPC -> Instance config type - db.t3.micro
-	Deselect Auto-Scaling -> Disable public access
-	Create database

### S3
-	Go to S3 console -> Create a bucket
- 	Bucket name - practice1labs-addemployee
- 	AWS Region - ca-central-1
-	Leave at defaults - encryption, ACL, versioning, block public access
-	Create Bucket

### EC2
-	Go to EC2 console -> Launch an instance
-	Instance Name - practice1labs-ubuntuwebserver
-	AMI - Ubuntu 22.04 - x86 - t2.micro
-	SG - practice1labs-ubuntuwebserver-sg 
	|	Type			|	Port	|	Source		|
	|-------------------|-----------|---------------|
	|	HTTP			|	80		|	Any IPv4	|
	|	SSH				|	22		|	<My_IP>		|
	|	MYSQL/Aurora	|	3306	|	Any IPv4	|
	|	Custom TCP		|	8080	|	Any IPv4	|
-	Create key pair - practice1labs-empappwebserver-kp
-	Launch

### Build Employee Management WebApp
-	Change permissions for key pair as readonly for userowner.
	```
	sudo chmod 400 practice1labs-empappwebserver-kp.pem
	```
-	Connect EC2 Instance
	```
	ssh -i practice1labs-empappwebserver-kp.pem ubuntu@<EC2_PublicIPv4>
	```
-	Update Ubuntu Server and install mysql dependency
	```
	sudo apt update && sudo apt upgrade -y
	sudo apt-get install mysql-client
	```
-	Configure MySQL to use AWS-RDS
	```
	mysql -h <RDS_Endpoint_Name> -u <RDP_admin_name> -p
	```
	-	Add in database entries with commands
			
			create database employee;
			use employee;
			create table employee(
				empid varchar(20),
				fname varchar(20),
				lname varchar(20),
				pri_skill varchar(20),
				location varchar(20));

-	Go to AWS Dashboard -> Create IAM role with Admin policy permissions -> Assign to EC2 instan -> as temporary tokens to access AWS resources

-	Download web application repository
		
		git clone
		cd aws-empwebapp
	- [Optional]Configure Development Environment for the web-application to run-in [optional]
		```	
		export FLASK_APP=EmpApp.py
		export FLASK_ENV=development
		```
- Install packages and dependencies
	```
	sudo apt-get install python3
	sudo apt-get install python3-flask
	sudo apt-get install python3-pymysql
	sudo apt-get install python3-boto3
	```

### Run Employee Management WebApp
```
python3 empwebapp.py
# Edit the config.py file to your aws resource arns
```
![image](/images/4.png)

### Ensure WebApp functionality 
-	Go to the custom webpage `<EC2_PublicIPv4>:8080` created in the flask environment
	![image](/images/5.png)
-	Enter values for
	-	Employee ID
	-	First Name
	-	Last Name
	-	Primary Skills
	-	Location
	-	Image
-	Update Database
![image](/images/1.png)
-	Ensure records
	-	Go to EC2 -> Login mysql to ensure data records
		![image](/images/2.png)
	-	Go to S3 -> to ensure object uploaded records
		![image](/images/3.png)

### Route 53
-	Go to Route 53 console -> Create a hosted zone
-	Enter the custom domain that you own on which you want to route traffic for the web app
-	Copy name servers generated by Route53 -> on the hosting server where domain is registered
-	Create two A records in Route 53 for '@' and 'www' pointing towards the IP for the EC2 instance
-	Go to domain to ensure webapp functionality
		
		www.<custom_domain_name>.com
		OR
		<custom_domain_name>.com
	![image](/images/6.png)